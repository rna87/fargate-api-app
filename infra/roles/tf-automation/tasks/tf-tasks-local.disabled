- name: Substitute tfvars
  template:
    src: templates/tfvars.j2
    dest: "{{ playbook_dir }}/tf/config.yaml"

- name: Init Terraform
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform init    
  when: (operation == "init")
  register: init

- name: "Display output: Init Terraform"
  debug:
    msg: "{{ (init.stdout | regex_replace('\\u001b.*0m', '')|trim).split('\n') }}"
  when: (operation == "init")

- name: Create resources - Plan
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace new {{ env }}
    terraform workspace select {{ env }}
    terraform plan -out=plan.tfplan;    
  when: (operation == "plan")
  register: plan


- name: "Display output: Create resources - Plan"
  debug:
    msg: "{{ (plan.stdout | regex_replace('\\u001b.*0m', '')|trim).split('\n') }}"
  when: (operation == "plan")

- name: Create resources
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace select {{ env }}
    terraform apply plan.tfplan    
  when: (operation == "apply")
  register: apply

- name: "Display output: Create resources"
  debug:
    msg: "{{  (apply.stdout | regex_replace('\\u001b.*0m', '')|trim).split('\n') }}"
  when: (operation == "apply")

- name: Destroy resources
  shell: |
    cd {{ playbook_dir }}/tf;
    terraform workspace new {{ env }}
    terraform workspace select {{ env }}
    terraform destroy -auto-approve    
  when: (operation == "destroy")
  register: destroy

- name: "Display output: Destroy resources"
  debug:
    msg: "{{  (destroy.stdout | regex_replace('\\u001b.*0m', '')|trim).split('\n') }}"
  when: (operation == "destroy")
