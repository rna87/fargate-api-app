import "strings"
import "types"

_modules = {
	"root": {
		"data": {
			"local_file": {
				"config": {
					"config": {
						"filename": "./config.yaml",
					},
					"provisioners": null,
					"references": {
						"filename": [],
					},
				},
			},
		},
		"modules": {
			"fargate_cluster": {
				"config": {},
				"references": {
					"app_port": [
						"local.config[\"app_port\"]",
						"local.config",
					],
					"aws_region": [
						"local.config[\"aws_region\"]",
						"local.config",
					],
					"containter_name": [
						"local.config[\"containter_name\"]",
						"local.config",
					],
					"environment": [
						"local.config[\"environment\"]",
						"local.config",
					],
					"fargate_namespace_id": [
						"module.networking.fargate_namespace_id",
						"module.networking",
					],
					"image_uri": [
						"local.config[\"image_uri\"]",
						"local.config",
					],
					"network_stack_vpclink_id": [
						"module.networking.vpc_link_id",
						"module.networking",
					],
					"private_subnet_ids": [
						"module.networking.private_subnet_id",
						"module.networking",
					],
					"project_name": [
						"local.config[\"project_name\"]",
						"local.config",
					],
					"vpc_cidr_block": [
						"local.config[\"vpc_cidr_block\"]",
						"local.config",
					],
					"vpc_id": [
						"module.networking.vpc_id",
						"module.networking",
					],
					"vpc_ling_sg": [
						"module.networking.vpc_link_sg",
						"module.networking",
					],
				},
				"source":  "../tf_modules/fargate_cluster",
				"version": "",
			},
			"networking": {
				"config": {},
				"references": {
					"aws_region": [
						"local.config[\"aws_region\"]",
						"local.config",
					],
					"environment": [
						"local.config[\"environment\"]",
						"local.config",
					],
					"project_name": [
						"local.config[\"project_name\"]",
						"local.config",
					],
					"vpc_cidr_block": [
						"local.config[\"vpc_cidr_block\"]",
						"local.config",
					],
				},
				"source":  "../tf_modules/networking",
				"version": "",
			},
		},
		"outputs": {},
		"providers": {
			"aws": {
				"alias": {
					"": {
						"config": {},
						"references": {
							"region": [
								"local.config[\"aws_region\"]",
								"local.config",
							],
						},
						"version": ">= 4.0.0",
					},
				},
				"config": {},
				"references": {
					"region": [
						"local.config[\"aws_region\"]",
						"local.config",
					],
				},
				"version": ">= 4.0.0",
			},
			"local": {
				"alias": {
					"": {
						"config":     {},
						"references": {},
						"version":    "",
					},
				},
				"config":     {},
				"references": {},
				"version":    "",
			},
		},
		"resources": {},
		"variables": {},
	},

	"module.fargate_cluster": {
		"data": {
			"aws_ecs_task_definition": {
				"app": {
					"config":       {},
					"provisioners": null,
					"references": {
						"task_definition": [
							"aws_ecs_task_definition.app.family",
							"aws_ecs_task_definition.app",
						],
					},
				},
			},
			"aws_iam_policy_document": {
				"app_policy": {
					"config": {
						"statement": [
							{
								"actions": [
									"ecr:GetAuthorizationToken",
									"ecr:BatchCheckLayerAvailability",
									"ecr:GetDownloadUrlForLayer",
									"ecr:BatchGetImage",
									"logs:CreateLogStream",
									"logs:PutLogEvents",
								],
								"resources": [
									"*",
								],
							},
						],
					},
					"provisioners": null,
					"references": {
						"statement": [
							{
								"actions":   [],
								"resources": [],
							},
						],
					},
				},
			},
		},
		"modules": {},
		"outputs": {
			"aws_ecs_cluster_id": {
				"depends_on":  [],
				"description": "id of ECS cluster",
				"references": [
					"aws_ecs_cluster.main.id",
					"aws_ecs_cluster.main",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"ecs_cluster_name": {
				"depends_on":  [],
				"description": "Name of ECS cluster",
				"references": [
					"aws_ecs_cluster.main.name",
					"aws_ecs_cluster.main",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {},
		"resources": {
			"aws_apigatewayv2_api": {
				"main": {
					"config": {
						"cors_configuration": [
							{
								"allow_headers": [
									"*",
								],
								"allow_methods": [
									"*",
								],
								"allow_origins": [
									"*",
								],
							},
						],
						"protocol_type": "HTTP",
					},
					"provisioners": null,
					"references": {
						"cors_configuration": [
							{
								"allow_headers": [],
								"allow_methods": [],
								"allow_origins": [],
							},
						],
						"name": [
							"var.project_name",
							"var.environment",
						],
						"protocol_type": [],
					},
				},
			},
			"aws_apigatewayv2_integration": {
				"main": {
					"config": {
						"connection_type":        "VPC_LINK",
						"integration_method":     "ANY",
						"integration_type":       "HTTP_PROXY",
						"payload_format_version": "1.0",
					},
					"provisioners": null,
					"references": {
						"api_id": [
							"aws_apigatewayv2_api.main.id",
							"aws_apigatewayv2_api.main",
						],
						"connection_id": [
							"var.network_stack_vpclink_id",
						],
						"connection_type":    [],
						"integration_method": [],
						"integration_type":   [],
						"integration_uri": [
							"aws_service_discovery_service.main.arn",
							"aws_service_discovery_service.main",
						],
						"payload_format_version": [],
					},
				},
			},
			"aws_apigatewayv2_route": {
				"default_route": {
					"config": {
						"route_key": "ANY /{proxy+}",
					},
					"provisioners": null,
					"references": {
						"api_id": [
							"aws_apigatewayv2_api.main.id",
							"aws_apigatewayv2_api.main",
						],
						"route_key": [],
						"target": [
							"aws_apigatewayv2_integration.main.id",
							"aws_apigatewayv2_integration.main",
						],
					},
				},
			},
			"aws_apigatewayv2_stage": {
				"Default": {
					"config": {
						"auto_deploy": true,
						"name":        "$default",
					},
					"provisioners": null,
					"references": {
						"api_id": [
							"aws_apigatewayv2_api.main.id",
							"aws_apigatewayv2_api.main",
						],
						"auto_deploy": [],
						"name":        [],
					},
				},
			},
			"aws_cloudwatch_log_group": {
				"main": {
					"config": {
						"retention_in_days": 30,
					},
					"provisioners": null,
					"references": {
						"name": [
							"var.project_name",
							"var.environment",
						],
						"retention_in_days": [],
						"tags": [
							"var.tags",
						],
					},
				},
			},
			"aws_cloudwatch_log_stream": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"log_group_name": [
							"aws_cloudwatch_log_group.main.name",
							"aws_cloudwatch_log_group.main",
						],
						"name": [
							"var.project_name",
							"var.environment",
						],
					},
				},
			},
			"aws_ecs_cluster": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"name": [
							"var.project_name",
							"var.environment",
						],
						"tags": [
							"var.tags",
						],
					},
				},
			},
			"aws_ecs_service": {
				"main": {
					"config": {
						"desired_count": 2,
						"launch_type":   "FARGATE",
						"network_configuration": [
							{
								"assign_public_ip": false,
							},
						],
						"service_registries": [
							{
								"port": "8080",
							},
						],
					},
					"provisioners": null,
					"references": {
						"cluster": [
							"aws_ecs_cluster.main.name",
							"aws_ecs_cluster.main",
						],
						"desired_count": [],
						"launch_type":   [],
						"name": [
							"var.project_name",
							"var.environment",
						],
						"network_configuration": [
							{
								"assign_public_ip": [],
								"security_groups": [
									"aws_security_group.ecs_service.id",
									"aws_security_group.ecs_service",
								],
								"subnets": [
									"var.private_subnet_ids",
								],
							},
						],
						"service_registries": [
							{
								"port": [],
								"registry_arn": [
									"aws_service_discovery_service.main.arn",
									"aws_service_discovery_service.main",
								],
							},
						],
						"task_definition": [
							"aws_ecs_task_definition.app.family",
							"aws_ecs_task_definition.app",
							"aws_ecs_task_definition.app.revision",
							"aws_ecs_task_definition.app",
							"data.aws_ecs_task_definition.app.revision",
							"data.aws_ecs_task_definition.app",
						],
					},
				},
			},
			"aws_ecs_task_definition": {
				"app": {
					"config": {
						"cpu":          "512",
						"memory":       "1024",
						"network_mode": "awsvpc",
						"requires_compatibilities": [
							"FARGATE",
						],
					},
					"provisioners": null,
					"references": {
						"container_definitions": [
							"var.containter_name",
							"var.image_uri",
							"aws_cloudwatch_log_group.main.name",
							"aws_cloudwatch_log_group.main",
							"var.app_port",
							"var.app_port",
							"var.environment",
						],
						"cpu": [],
						"execution_role_arn": [
							"aws_iam_role.ecs_task_execution_role.arn",
							"aws_iam_role.ecs_task_execution_role",
						],
						"family": [
							"var.project_name",
							"var.environment",
						],
						"memory":                   [],
						"network_mode":             [],
						"requires_compatibilities": [],
						"tags": [
							"var.tags",
						],
						"task_role_arn": [
							"aws_iam_role.task_definition_task_role.arn",
							"aws_iam_role.task_definition_task_role",
						],
					},
				},
			},
			"aws_iam_role": {
				"ecs_task_execution_role": {
					"config": {
						"assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
					},
					"provisioners": null,
					"references": {
						"assume_role_policy": [],
					},
				},
				"task_definition_task_role": {
					"config": {
						"assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"ecs-tasks.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
					},
					"provisioners": null,
					"references": {
						"assume_role_policy": [],
					},
				},
			},
			"aws_iam_role_policy": {
				"app_policy": {
					"config":       {},
					"provisioners": null,
					"references": {
						"name": [
							"var.project_name",
							"var.environment",
						],
						"policy": [
							"data.aws_iam_policy_document.app_policy.json",
							"data.aws_iam_policy_document.app_policy",
						],
						"role": [
							"aws_iam_role.ecs_task_execution_role.id",
							"aws_iam_role.ecs_task_execution_role",
						],
					},
				},
			},
			"aws_security_group": {
				"ecs_service": {
					"config": {
						"description": "security group for fargate tasks",
						"egress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "Allow all outbound traffic by default",
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"security_groups":  null,
								"self":             null,
								"to_port":          0,
							},
						],
					},
					"provisioners": null,
					"references": {
						"description": [],
						"egress":      [],
						"ingress": [
							"var.vpc_cidr_block",
							"var.vpc_ling_sg",
						],
						"name": [
							"var.environment",
						],
						"vpc_id": [
							"var.vpc_id",
						],
					},
				},
			},
			"aws_service_discovery_service": {
				"main": {
					"config": {
						"dns_config": [
							{
								"dns_records": [
									{
										"ttl":  60,
										"type": "SRV",
									},
								],
								"routing_policy": "MULTIVALUE",
							},
						],
					},
					"provisioners": null,
					"references": {
						"dns_config": [
							{
								"dns_records": [
									{
										"ttl":  [],
										"type": [],
									},
								],
								"namespace_id": [
									"var.fargate_namespace_id",
								],
								"routing_policy": [],
							},
						],
						"name": [
							"var.project_name",
							"var.environment",
						],
					},
				},
			},
		},
		"variables": {
			"app_port": {
				"default":     null,
				"description": "The container port number",
			},
			"aws_region": {
				"default":     null,
				"description": "",
			},
			"containter_name": {
				"default":     null,
				"description": "backend ontainer name",
			},
			"environment": {
				"default":     null,
				"description": "",
			},
			"fargate_namespace_id": {
				"default":     null,
				"description": "cloudmap service created by network layer",
			},
			"image_uri": {
				"default":     null,
				"description": "The container image deployed in ecr",
			},
			"network_stack_vpclink_id": {
				"default":     null,
				"description": "VPC link created by the network layer",
			},
			"private_subnet_ids": {
				"default":     null,
				"description": "VPC private subnet ids",
			},
			"project_name": {
				"default":     null,
				"description": "",
			},
			"tags": {
				"default": {
					"name": "value",
				},
				"description": "Tags to attach to the resources",
			},
			"vpc_cidr_block": {
				"default":     null,
				"description": "CIDR Block",
			},
			"vpc_id": {
				"default":     null,
				"description": "VPC id created by the network layer",
			},
			"vpc_ling_sg": {
				"default":     null,
				"description": "VPC link security group created by the network layer",
			},
		},
	},

	"module.networking": {
		"data": {
			"aws_subnets": {
				"main": {
					"config": {
						"filter": [
							{
								"name": "vpc-id",
							},
						],
					},
					"provisioners": null,
					"references": {
						"filter": [
							{
								"name": [],
								"values": [
									"aws_vpc.main_vpc.id",
									"aws_vpc.main_vpc",
								],
							},
						],
					},
				},
			},
		},
		"modules": {},
		"outputs": {
			"fargate_namespace_id": {
				"depends_on":  [],
				"description": "Namespace id",
				"references": [
					"aws_service_discovery_private_dns_namespace.main.id",
					"aws_service_discovery_private_dns_namespace.main",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"private_subnet_id": {
				"depends_on":  [],
				"description": "Private Subnet id for Fargate Cluster",
				"references": [
					"aws_subnet.private_subnet.id",
					"aws_subnet.private_subnet",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"vpc_id": {
				"depends_on":  [],
				"description": "VPC id",
				"references": [
					"aws_vpc.main_vpc.id",
					"aws_vpc.main_vpc",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"vpc_link_id": {
				"depends_on":  [],
				"description": "VPC Link Id",
				"references": [
					"aws_apigatewayv2_vpc_link.main.id",
					"aws_apigatewayv2_vpc_link.main",
				],
				"sensitive": false,
				"value":     undefined,
			},
			"vpc_link_sg": {
				"depends_on":  [],
				"description": "Security Group for VPC Link",
				"references": [
					"aws_security_group.main.id",
					"aws_security_group.main",
				],
				"sensitive": false,
				"value":     undefined,
			},
		},
		"providers": {},
		"resources": {
			"aws_apigatewayv2_vpc_link": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"name": [
							"var.project_name",
							"var.environment",
						],
						"security_group_ids": [
							"aws_security_group.main.id",
							"aws_security_group.main",
						],
						"subnet_ids": [
							"data.aws_subnets.main.ids",
							"data.aws_subnets.main",
						],
					},
				},
			},
			"aws_eip": {
				"nat": {
					"config": {
						"vpc": true,
					},
					"provisioners": null,
					"references": {
						"vpc": [],
					},
				},
			},
			"aws_internet_gateway": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
			},
			"aws_nat_gateway": {
				"nat-gw": {
					"config":       {},
					"provisioners": null,
					"references": {
						"allocation_id": [
							"aws_eip.nat.id",
							"aws_eip.nat",
						],
						"subnet_id": [
							"aws_subnet.public_subnet.id",
							"aws_subnet.public_subnet",
						],
						"tags": [
							"var.project_name",
							"var.environment",
						],
					},
				},
			},
			"aws_route_table": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"route": [
							"aws_internet_gateway.main.id",
							"aws_internet_gateway.main",
						],
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
				"private_route": {
					"config":       {},
					"provisioners": null,
					"references": {
						"route": [
							"aws_nat_gateway.nat-gw.id",
							"aws_nat_gateway.nat-gw",
						],
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
			},
			"aws_route_table_association": {
				"main": {
					"config":       {},
					"provisioners": null,
					"references": {
						"route_table_id": [
							"aws_route_table.main.id",
							"aws_route_table.main",
						],
						"subnet_id": [
							"aws_subnet.public_subnet.id",
							"aws_subnet.public_subnet",
						],
					},
				},
				"nat": {
					"config":       {},
					"provisioners": null,
					"references": {
						"route_table_id": [
							"aws_route_table.private_route.id",
							"aws_route_table.private_route",
						],
						"subnet_id": [
							"aws_subnet.private_subnet.id",
							"aws_subnet.private_subnet",
						],
					},
				},
			},
			"aws_security_group": {
				"main": {
					"config": {
						"description": "Allow hhtp",
						"egress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      null,
								"from_port":        0,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "-1",
								"security_groups":  null,
								"self":             null,
								"to_port":          0,
							},
						],
						"ingress": [
							{
								"cidr_blocks": [
									"0.0.0.0/0",
								],
								"description":      "HTTP",
								"from_port":        8080,
								"ipv6_cidr_blocks": null,
								"prefix_list_ids":  null,
								"protocol":         "tcp",
								"security_groups":  null,
								"self":             null,
								"to_port":          8080,
							},
						],
						"name": "VPC_Link_SG",
					},
					"provisioners": null,
					"references": {
						"description": [],
						"egress":      [],
						"ingress":     [],
						"name":        [],
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
			},
			"aws_service_discovery_private_dns_namespace": {
				"main": {
					"config": {
						"description": "Private DNS Namespace",
					},
					"provisioners": null,
					"references": {
						"description": [],
						"name": [
							"var.project_name",
							"var.environment",
						],
						"vpc": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
			},
			"aws_subnet": {
				"private_subnet": {
					"config": {
						"availability_zone": "ap-southeast-2b",
						"cidr_block":        "192.168.1.0/24",
					},
					"provisioners": null,
					"references": {
						"availability_zone": [],
						"cidr_block":        [],
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
				"public_subnet": {
					"config": {
						"availability_zone": "ap-southeast-2a",
						"cidr_block":        "192.168.0.0/24",
					},
					"provisioners": null,
					"references": {
						"availability_zone": [],
						"cidr_block":        [],
						"tags": [
							"var.project_name",
							"var.environment",
						],
						"vpc_id": [
							"aws_vpc.main_vpc.id",
							"aws_vpc.main_vpc",
						],
					},
				},
			},
			"aws_vpc": {
				"main_vpc": {
					"config": {
						"enable_dns_hostnames": true,
						"enable_dns_support":   true,
						"instance_tenancy":     "default",
					},
					"provisioners": null,
					"references": {
						"cidr_block": [
							"var.vpc_cidr_block",
						],
						"enable_dns_hostnames": [],
						"enable_dns_support":   [],
						"instance_tenancy":     [],
						"tags": [
							"var.project_name",
							"var.environment",
						],
					},
				},
			},
		},
		"variables": {
			"aws_region": {
				"default":     null,
				"description": "",
			},
			"environment": {
				"default":     null,
				"description": "",
			},
			"project_name": {
				"default":     null,
				"description": "",
			},
			"vpc_cidr_block": {
				"default":     null,
				"description": "CIDR block range for vpc",
			},
		},
	},
}

module_paths = [
	[],
	[
		"fargate_cluster",
	],
	[
		"networking",
	],
]

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
modules = _modules.root.modules
providers = _modules.root.providers
resources = _modules.root.resources
variables = _modules.root.variables
outputs = _modules.root.outputs
