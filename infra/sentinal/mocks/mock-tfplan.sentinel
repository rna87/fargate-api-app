import "strings"
import "types"

_modules = {
	"root": {
		"data":      {},
		"path":      [],
		"resources": {},
	},

	"module.fargate_cluster": {
		"data": {},
		"path": [
			"fargate_cluster",
		],
		"resources": {},
	},

	"module.networking": {
		"data": {},
		"path": [
			"networking",
		],
		"resources": {},
	},
}

module_paths = [
	[],
	[
		"fargate_cluster",
	],
	[
		"networking",
	],
]

terraform_version = "1.2.6"

variables = {}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
